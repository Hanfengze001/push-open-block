/* eslint-disable func-style */
/* eslint-disable require-jsdoc */
function addMsg (Blockly) {
    Object.assign(Blockly.ScratchMsgs.locales.en, {
        INPUT_CATEGORY: 'INPUT',
        INFRARED_VALUE: 'read line follower pin %1',
        INFRARED_VALUE1: 'read line follower pin %1',
        IR_L1: 'Leftport1',
        IR_R1: 'Rightport1',
        IR_L2: 'Leftport2',
        IR_R2: 'Rightport2',
        IR_L3: 'Leftport3',
        IR_R3: 'Rightport3',
        IR_L4: 'Leftport4',
        IR_R4: 'Rightport4',
        SOUND_VALUE: 'read voice pin %1',
		portsAD1: 'PORT1',
		portsAD2: 'PORT2',
		portsAD3: 'PORT3',
		portsAD4: 'PORT4',
		LIGHTSENSOR_VALUE:  'read Button sensor pin %1',
		BUTTON_VALUE:  'button %1',
		PO1:  'port1',
		PO2:  'port2',
		PO3:  'port3',
		PO4:  'port4',
		PO5:  'port5',
		PO7:  'port7',
		PO6:  'port6',
		PO8:  'port8',
        GRAY_VALUE: 'read Grayscale sensor %1 at LED %2',
		LEDON:  'on',
		LEDOFF:  'off',
		PIR_VALUE:  'read PIR %1',
		ULTRASONIC_INIT:  'init ultrasonic sensor TRIG %1 ECHO %2',
		tport1:  'tPort1',
		tport2:  'tPort2',
		tport3:  'tPort3',
		tport4:  'tPort4',
		tport5:  'tPort5',
		tport6:  'tPort6',
		tport7:  'tPort7',
		tport8:  'tPort8',
		eport1:  'ePort1',
		eport2:  'ePort2',
		eport3:  'ePort3',
		eport4:  'ePort4',
		eport5:  'ePort5',
		eport6:  'ePort6',
		eport7:  'ePort7',
		eport8:  'ePort8',
		ULTRASONIC_VALUE:  '%1 get distance',
		SHT_VALUE:  'Identify Humiture sensor %1',
		Temp:  'Temperature',
		Hum:  'Humidity',
		GYRO_VALUE:  'Identify GYRO %1',
		gyro_x:  'x',
		gyro_y:  'y',
		gyro_z:  'z',
		GYRO_VALUE2:  'Identify GYRO %1 ',
		GYRO_VALUE3:  'Read yaw ',
		Gesture_Value: '(Port 5/Port 7) gesture %1 recognized',
		Forward: 'Forward',
		Backward: 'Backward',
		Right: 'Right',
		Left: 'Left',
		Up: 'Up',
		Down: 'Down',
		Clockwise: 'Clockwise',
		anticlockwise: 'counterclockwise',
		wave: 'Wave your hand',
		front:  'front',
		back:  'back',
		right:  'right',
		left:  'left',
		COLOR_VALUE:  'Identify color %1',
		COLOR_VALUE2:  ' %1 Identifycolor %2 value',
		COLOR_VALUE3:  'Identify color %1 value',
		red:  'red',
		green:  'green',
		blue:  'blue',
		yellow:  'yellow'
    });
    Object.assign(Blockly.ScratchMsgs.locales['zh-cn'], {
        INPUT_CATEGORY: '输入类',
        INFRARED_VALUE: '巡线传感器 %1',
        INFRARED_VALUE1: '巡线传感器 %1',
        IR_L1: '接口1左',
        IR_R1: '接口1右',
        IR_L2: '接口2左',
        IR_R2: '接口2右',
        IR_L3: '接口3左',
        IR_R3: '接口3右',
        IR_L4: '接口4左',
        IR_R4: '接口4右',
        SOUND_VALUE: '声音传感器 %1',
		portsAD1: '接口1',
		portsAD2: '接口2',
		portsAD3: '接口3',
		portsAD4: '接口4',
		LIGHTSENSOR_VALUE:  '光敏传感器 %1',
		BUTTON_VALUE:  '按钮开关 %1',
		PO1:  '端口1',
		PO2:  '端口2',
		PO3:  '端口3',
		PO4:  '端口4',
		PO5:  '端口5',
		PO7:  '端口7',
		PO6:  '端口6',
		PO8:  '端口8',
        GRAY_VALUE: '灰度传感器 %1 %2 灯',
		LEDON:  '开',
		LEDOFF:  '关',
		PIR_VALUE:  '人体感应 %1',
		ULTRASONIC_INIT:  '超声波TRIG %1 ECHO %2',
		tport1:  '端口1',
		tport2:  '端口2',
		tport3:  '端口3',
		tport4:  '端口4',
		tport5:  '端口5',
		tport6:  '端口6',
		tport7:  '端口7',
		tport8:  '端口8',
		eport1:  '端口1',
		eport2:  '端口2',
		eport3:  '端口3',
		eport4:  '端口4',
		eport5:  '端口5',
		eport6:  '端口6',
		eport7:  '端口7',
		eport8:  '端口8',
		ULTRASONIC_VALUE:  '超声波 %1 距离',
		SHT_VALUE:  '温湿度传感器(端口5/端口7)检测到 %1',
		Temp:  '温度',
		Hum:  '湿度',
		GYRO_VALUE:  '陀螺仪(端口5/端口7) %1 角度',
		gyro_x:  'x轴',
		gyro_y:  'y轴',
		gyro_z:  'z轴',
		GYRO_VALUE2:  '陀螺仪(端口5/端口7)检测到 %1',
		GYRO_VALUE3:  '陀螺仪(端口5/端口7)偏航角',
		GESTURE_VALUE:  '(端口5/端口7)识别到手势 %1',
		Forward:  '向前',
		Backward:  '向后',
		Right:  '向右',
		Left:  '向左',
		Up:  '向上',
		Down:  '向下',
		Clockwise:  '顺时针',
		anticlockwise:  '逆时针',
		wave:  '挥手',
		front:  '向前',
		back:  '向后',
		right:  '向右',
		left:  '向左',
		COLOR_VALUE:  '颜色传感器(端口5/端口7)检测到 %1',
		COLOR_VALUE2:  ' %1 颜色传感器 %2 值',
		COLOR_VALUE3:  '颜色传感器端口7 %1 值',
		red:  '红色',
		green:  '绿色',
		blue:  '蓝色',
		yellow:  '黄色'
    });
   
    return Blockly;
}

exports = addMsg;
